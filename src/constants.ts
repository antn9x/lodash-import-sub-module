export const towParamsFunc = [
  "after",
  "ary",
  "assign",
  "assignIn",
  "assignInWith",
  "assignWith",
  "at",
  "before",
  "bind",
  "bindAll",
  "bindKey",
  "castArray",
  "chain",
  "chunk",
  "concat",
  "cond",
  "conforms",
  "constant",
  "countBy",
  "create",
  "curry",
  "curryRight",
  "debounce",
  "defaults",
  "defaultsDeep",
  "defer",
  "delay",
  "difference",
  "differenceBy",
  "differenceWith",
  "drop",
  "dropRight",
  "dropRightWhile",
  "dropWhile",
  "fill",
  "filter",
  "flatMapDepth",
  "flattenDepth",
  "flip",
  "flow",
  "flowRight",
  "fromPairs",
  "functions",
  "functionsIn",
  "groupBy",
  "initial",
  "intersection",
  "intersectionBy",
  "intersectionWith",
  "invert",
  "invertBy",
  "invokeMap",
  "iteratee",
  "keyBy",
  "keys",
  "keysIn",
  "map",
  "mapKeys",
  "mapValues",
  "matches",
  "matchesProperty",
  "memoize",
  "merge",
  "mergeWith",
  "method",
  "methodOf",
  "mixin",
  "negate",
  "nthArg",
  "omit",
  "omitBy",
  "once",
  "orderBy",
  "over",
  "overArgs",
  "overEvery",
  "overSome",
  "partial",
  "partialRight",
  "partition",
  "pick",
  "pickBy",
  "property",
  "propertyOf",
  "pull",
  "pullAll",
  "pullAllBy",
  "pullAllWith",
  "pullAt",
  "range",
  "rangeRight",
  "rearg",
  "reject",
  "remove",
  "rest",
  "reverse",
  "sampleSize",
  "set",
  "setWith",
  "shuffle",
  "slice",
  "sortBy",
  "sortedUniq",
  "sortedUniqBy",
  "split",
  "spread",
  "tail",
  "take",
  "takeRight",
  "takeRightWhile",
  "takeWhile",
  "tap",
  "throttle",
  "thru",
  "toPairsIn",
  "toPath",
  "toPlainObject",
  "transform",
  "unary",
  "union",
  "unionBy",
  "unionWith",
  "uniqBy",
  "uniqWith",
  "unset",
  "unzip",
  "unzipWith",
  "update",
  "updateWith",
  "values",
  "valuesIn",
  "without",
  "words",
  "wrap",
  "xor",
  "xorBy",
  "xorWith",
  "zip",
  "zipObject",
  "zipObjectDeep",
  "zipWith",
  "entries",
  "entriesIn",
  "extend",
  "extendWith",
  "add",
  "attempt",
  "ceil",
  "clamp",
  "cloneDeepWith",
  "cloneWith",
  "conformsTo",
  "deburr",
  "defaultTo",
  "divide",
  "endsWith",
  "eq",
  "escape",
  "escapeRegExp",
  "every",
  "find",
  "findIndex",
  "findKey",
  "findLast",
  "findLastIndex",
  "findLastKey",
  "floor",
  "forEach",
  "forEachRight",
  "forIn",
  "forInRight",
  "forOwn",
  "forOwnRight",
  "get",
  "gt",
  "gte",
  "has",
  "hasIn",
  "head",
  "identity",
  "includes",
  "indexOf",
  "inRange",
  "invoke",
  "join",
  "lastIndexOf",
  "lt",
  "lte",
  "maxBy",
  "mean",
  "meanBy",
  "minBy",
  "stubArray",
  "stubFalse",
  "stubObject",
  "stubString",
  "stubTrue",
  "multiply",
  "nth",
  "noConflict",
  "noop",
  "now",
  "pad",
  "padEnd",
  "padStart",
  "random",
  "reduce",
  "reduceRight",
  "repeat",
  "replace",
  "result",
  "runInContext",
  "sample",
  "some",
  "sortedIndex",
  "sortedIndexBy",
  "sortedIndexOf",
  "sortedLastIndex",
  "sortedLastIndexBy",
  "sortedLastIndexOf",
  "startsWith",
  "subtract",
  "sumBy",
  "template",
  "times",
  "truncate",
  "unescape",
  "uniqueId",
  "each",
  "eachRight",
];

export const oneParamFunc = [
  "round",
  "size",
  "parseInt",
  "flatMap",
  "flatMapDeep",
  "flatten",
  "flattenDeep",
  "toArray",
  "toPairs",
  "kebabCase",
  "camelCase",
  "capitalize",
  "uniq",
  "clone",
  "cloneDeep",
  "last",
  "lowerCase",
  "lowerFirst",
  "snakeCase",
  "startCase",
  "max",
  "min",
  "sum",
  "compact",
  "isArguments",
  "isArray",
  "isArrayBuffer",
  "isArrayLike",
  "isArrayLikeObject",
  "isBoolean",
  "isBuffer",
  "isDate",
  "isElement",
  "isEmpty",
  "isEqual",
  "isEqualWith",
  "isError",
  "isFinite",
  "isFunction",
  "isInteger",
  "isLength",
  "isMap",
  "isMatch",
  "isMatchWith",
  "isNaN",
  "isNative",
  "isNil",
  "isNull",
  "isNumber",
  "isObject",
  "isObjectLike",
  "isPlainObject",
  "isRegExp",
  "isSafeInteger",
  "isSet",
  "isString",
  "isSymbol",
  "isTypedArray",
  "isUndefined",
  "isWeakMap",
  "isWeakSet",
  "toFinite",
  "toInteger",
  "toLength",
  "toLower",
  "toNumber",
  "toSafeInteger",
  "toString",
  "toUpper",
  "trim",
  "trimEnd",
  "trimStart",
  "upperCase",
  "upperFirst",
  "first"
];
