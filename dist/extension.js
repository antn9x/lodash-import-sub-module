(()=>{"use strict";var e={601:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.oneParamFunc=t.towParamsFunc=void 0,t.towParamsFunc=["after","ary","assign","assignIn","assignInWith","assignWith","at","before","bind","bindAll","bindKey","castArray","chain","chunk","concat","cond","conforms","constant","countBy","create","curry","curryRight","debounce","defaults","defaultsDeep","defer","delay","difference","differenceBy","differenceWith","drop","dropRight","dropRightWhile","dropWhile","fill","filter","flatMap","flatMapDeep","flatMapDepth","flatten","flattenDeep","flattenDepth","flip","flow","flowRight","fromPairs","functions","functionsIn","groupBy","initial","intersection","intersectionBy","intersectionWith","invert","invertBy","invokeMap","iteratee","keyBy","keys","keysIn","map","mapKeys","mapValues","matches","matchesProperty","memoize","merge","mergeWith","method","methodOf","mixin","negate","nthArg","omit","omitBy","once","orderBy","over","overArgs","overEvery","overSome","partial","partialRight","partition","pick","pickBy","property","propertyOf","pull","pullAll","pullAllBy","pullAllWith","pullAt","range","rangeRight","rearg","reject","remove","rest","reverse","sampleSize","set","setWith","shuffle","slice","sortBy","sortedUniq","sortedUniqBy","split","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","thru","toArray","toPairs","toPairsIn","toPath","toPlainObject","transform","unary","union","unionBy","unionWith","uniq","uniqBy","uniqWith","unset","unzip","unzipWith","update","updateWith","values","valuesIn","without","words","wrap","xor","xorBy","xorWith","zip","zipObject","zipObjectDeep","zipWith","entries","entriesIn","extend","extendWith","add","attempt","camelCase","capitalize","ceil","clamp","clone","cloneDeep","cloneDeepWith","cloneWith","conformsTo","deburr","defaultTo","divide","endsWith","eq","escape","escapeRegExp","every","find","findIndex","findKey","findLast","findLastIndex","findLastKey","floor","forEach","forEachRight","forIn","forInRight","forOwn","forOwnRight","get","gt","gte","has","hasIn","head","identity","includes","indexOf","inRange","invoke","join","kebabCase","last","lastIndexOf","lowerCase","lowerFirst","lt","lte","max","maxBy","mean","meanBy","min","minBy","stubArray","stubFalse","stubObject","stubString","stubTrue","multiply","nth","noConflict","noop","now","pad","padEnd","padStart","parseInt","random","reduce","reduceRight","repeat","replace","result","round","runInContext","sample","size","snakeCase","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startCase","startsWith","subtract","sum","sumBy","template","times","truncate","unescape","uniqueId","each","eachRight"],t.oneParamFunc=["compact","isArguments","isArray","isArrayBuffer","isArrayLike","isArrayLikeObject","isBoolean","isBuffer","isDate","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","isFunction","isInteger","isLength","isMap","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isNumber","isObject","isObjectLike","isPlainObject","isRegExp","isSafeInteger","isSet","isString","isSymbol","isTypedArray","isUndefined","isWeakMap","isWeakSet","toFinite","toInteger","toLength","toLower","toNumber","toSafeInteger","toString","toUpper","trim","trimEnd","trimStart","upperCase","upperFirst","first"]},496:e=>{e.exports=require("vscode")}},t={};function i(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,i),a.exports}var r={};(()=>{var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=i(496),n=i(601);e.activate=function(e){t.commands.registerCommand("extension.import-lodash-sub-module",(function(e){const i=t.window.activeTextEditor;if(i){const t=i.document;i.edit((i=>{const r=`import ${e} from 'lodash/${e}';`;t.getText().includes(r)||i.insert(t.positionAt(0),r+"\n")}))}}));const i=t.languages.registerCompletionItemProvider(["javascript","typescript"],{provideCompletionItems:(e,i,r,a)=>[...n.oneParamFunc,...n.towParamsFunc].map((e=>{const i=new t.CompletionItem(`${e}`);i.filterText=`${e}`,i.detail=`lodash/${e}`;const r=n.oneParamFunc.includes(e)?`${e}($1)`:`${e}($1, $2)`;return i.insertText=new t.SnippetString(r),i.command={command:"extension.import-lodash-sub-module",arguments:[e],title:"import-lodash-sub-module..."},i}))});e.subscriptions.push(i)},e.deactivate=function(){}})(),module.exports=r})();